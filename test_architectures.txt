#     # 2-3 Conv-Conv Architecture
#     self.encoder1 = nn.Sequential(nn.Conv2d(in_channels=1, out_channels=32, kernel_size=5, stride=2, padding=2), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.encoder2 = nn.Sequential(nn.Conv2d(in_channels=32, out_channels=16, kernel_size=3, stride=2, padding=1), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.decoder1 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=32, kernel_size=3, stride=2, padding=2), nn.ReLU())
#     self.decoder2 = nn.Sequential(nn.ConvTranspose2d(in_channels=32, out_channels=16, kernel_size=3, stride=2, padding=1), nn.ReLU())
#     self.decoder3 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=1, kernel_size=2, stride=2, padding=3))
    
#     # 2-3 Conv-Conv Architecture
#     self.encoder1 = nn.Sequential(nn.Conv2d(in_channels=1, out_channels=16, kernel_size=5, stride=2, padding=2), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.encoder2 = nn.Sequential(nn.Conv2d(in_channels=16, out_channels=32, kernel_size=3, stride=2, padding=1), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.decoder1 = nn.Sequential(nn.ConvTranspose2d(in_channels=32, out_channels=16, kernel_size=3, stride=2, padding=2), nn.ReLU())
#     self.decoder2 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=8, kernel_size=3, stride=2, padding=1), nn.ReLU())
#     self.decoder3 = nn.Sequential(nn.ConvTranspose2d(in_channels=8, out_channels=1, kernel_size=2, stride=2, padding=3))

#     # 2-3 Conv-Conv Architecture
#     self.encoder1 = nn.Sequential(nn.Conv2d(in_channels=1, out_channels=32, kernel_size=3, stride=1, padding=0), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.encoder2 = nn.Sequential(nn.Conv2d(in_channels=32, out_channels=16, kernel_size=3, stride=1, padding=0), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.decoder1 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=32, kernel_size=3, stride=1, padding=0), nn.ReLU())
#     self.decoder2 = nn.Sequential(nn.ConvTranspose2d(in_channels=32, out_channels=16, kernel_size=3, stride=1, padding=0), nn.ReLU())
#     self.decoder3 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=1, kernel_size=3, stride=1, padding=0))

#     # 2-3 Conv-Conv Architecture
#     self.encoder1 = nn.Sequential(nn.Conv2d(in_channels=1, out_channels=32, kernel_size=3, stride=1, padding=1), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.encoder2 = nn.Sequential(nn.Conv2d(in_channels=32, out_channels=16, kernel_size=3, stride=1, padding=1), nn.ReLU(), nn.MaxPool2d(2, stride=1))
#     self.decoder1 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=32, kernel_size=3, stride=1, padding=2), nn.ReLU())
#     self.decoder2 = nn.Sequential(nn.ConvTranspose2d(in_channels=32, out_channels=16, kernel_size=3, stride=1, padding=5), nn.ReLU())
#     self.decoder3 = nn.Sequential(nn.ConvTranspose2d(in_channels=16, out_channels=1, kernel_size=2, stride=2, padding=2))